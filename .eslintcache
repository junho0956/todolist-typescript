[{"C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\index.tsx":"1","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\reportWebVitals.ts":"2","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\App.tsx":"3","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\todolist\\TodoContainer.tsx":"4","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\todolist\\TodoTitle.tsx":"5","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\todolist\\TodoMain.tsx":"6","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\todolist\\TodoList.tsx":"7","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\common\\store.ts":"8","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\common\\createReducer.ts":"9","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\todolist\\state.ts":"10"},{"size":500,"mtime":1610889488067,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1610790853589,"results":"13","hashOfConfig":"12"},{"size":283,"mtime":1610889682001,"results":"14","hashOfConfig":"12"},{"size":396,"mtime":1610794832519,"results":"15","hashOfConfig":"12"},{"size":131,"mtime":1610795228782,"results":"16","hashOfConfig":"12"},{"size":1692,"mtime":1610896503988,"results":"17","hashOfConfig":"12"},{"size":1723,"mtime":1610896484228,"results":"18","hashOfConfig":"12"},{"size":288,"mtime":1610896166183,"results":"19","hashOfConfig":"12"},{"size":586,"mtime":1610894216701,"results":"20","hashOfConfig":"12"},{"size":2565,"mtime":1610896561230,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1xw8cuq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\index.tsx",[],["46","47"],"C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\reportWebVitals.ts",[],"C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\App.tsx",[],"C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\todolist\\TodoContainer.tsx",[],"C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\todolist\\TodoTitle.tsx",[],"C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\todolist\\TodoMain.tsx",["48","49"],"import TodoList from \"./TodoList\";\r\nimport {useState, useRef} from 'react';\r\nimport {TodoItemType} from '../common';\r\nimport {useSelector} from 'react-redux';\r\nimport store, { RootState } from '../common/store';\r\nimport { addTodo, delTodo } from \"./state\";\r\n\r\nexport default function TodoMain(){\r\n    const id = useRef<number>(0);\r\n    const todoText = useRef<HTMLInputElement>(null);\r\n    const [input, setInput] = useState<string>('');\r\n    const todolist = useSelector((state:RootState) => state.todoState);\r\n\r\n    function handleInput(e: React.FormEvent<HTMLInputElement>):void {\r\n        setInput(e.currentTarget.value);\r\n    }\r\n\r\n    function handleKeydown(e: React.KeyboardEvent<HTMLInputElement>){\r\n        if(e.key === 'Enter'){\r\n            handleAddTodo();\r\n        }\r\n    }\r\n\r\n    function handleAddTodo(){\r\n        const newTodo = input;\r\n        setInput('');\r\n        store.dispatch(addTodo(newTodo));\r\n        (document.querySelector('.input') as HTMLInputElement).value = '';\r\n        (todoText.current as HTMLInputElement).focus();\r\n    }\r\n\r\n    function handleDeleteTodo(el: HTMLDivElement){\r\n        const todoId:number = Number(el.dataset.id);\r\n        store.dispatch(delTodo(todoId));\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <input ref={todoText} className=\"input\" type=\"text\" placeholder=\"write your todo\" onChange={handleInput} onKeyDown={handleKeydown}></input>\r\n            <span className=\"inputSetButton\" onClick={handleAddTodo}>담기</span>\r\n            <strong><div style={{marginLeft:'2rem', marginBottom:'0.5rem'}}>남은 할 일: {(todolist as TodoItemType[]).length}</div></strong>\r\n            <TodoList todo={todolist}/>\r\n        </>\r\n    )\r\n} \r\n","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\todolist\\TodoList.tsx",["50","51"],"import { TodoItemType } from \"../common\"\r\nimport {useState, useEffect} from 'react';\r\nimport { delTodo, toggleTodo } from \"./state\";\r\nimport store from \"../common/store\";\r\n\r\nfunction TodoItem({todo}:{todo:TodoItemType}){\r\n\r\n    function handleCheck(e: React.MouseEvent<HTMLSpanElement>){\r\n        const todoEl = (e.currentTarget.parentNode as HTMLDivElement).children[0];\r\n        if(!todo.done){\r\n            (todoEl as HTMLSpanElement).style.textDecoration = \"line-through\";\r\n            (todoEl as HTMLSpanElement).style. color = 'grey';\r\n            store.dispatch(toggleTodo(todo.id));\r\n        }\r\n        else{\r\n            store.dispatch(delTodo(todo.id));\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"todoItem\" data-id={todo.id}>\r\n            <span className=\"todo\">{todo.todo}</span>\r\n            {!todo.done ? \r\n                <span className=\"checkbox\" onClick={handleCheck}>✔</span> : \r\n                <span onClick={handleCheck} style={{color:'red'}}>✖</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function TodoList({todo}:{todo:TodoItemType[]}){\r\n    useEffect(() => {\r\n        let todoId = 0;\r\n        const allTodo = document.querySelectorAll('.todoItem');\r\n        allTodo.forEach(item => {\r\n            todoId++;\r\n            if(todoId % 2 === 0){\r\n                (item as HTMLDivElement).style.backgroundColor = 'aliceblue';\r\n            }\r\n            else{\r\n                (item as HTMLDivElement).style.backgroundColor = 'white';\r\n            }\r\n        })\r\n    }, [todo]);\r\n    \r\n    return(\r\n        <>\r\n            {todo.map((item:TodoItemType) => {\r\n                return(<TodoItem key={item.id} todo={item} />)\r\n            })}\r\n        </>\r\n    )\r\n}","C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\common\\store.ts",[],"C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\common\\createReducer.ts",[],"C:\\Users\\junho\\Desktop\\typescript\\todolist-typescript\\src\\todolist\\state.ts",["52"],"import {TodoItemType} from '../common';\r\n// import createReducer from '../common/createReducer';\r\nimport {produce} from 'immer';\r\n\r\nexport const AddTodo = 'state/AddTodo' as const;\r\nexport const DelTodo = 'state/DelTodo' as const;\r\nexport const ToggleTodo = 'state/ToggleTodo' as const;\r\n\r\nlet todoId = 1;\r\nexport interface addTodoType {\r\n    type: string;\r\n    todo: TodoItemType,\r\n}\r\nexport interface delTodoType{\r\n    type:string;\r\n    id: number;\r\n}\r\nexport interface toggleTodoType{\r\n    type:string;\r\n    id:number;\r\n}\r\n\r\nexport const addTodo = (todo:string) => ({\r\n    type: AddTodo,\r\n    todo: {\r\n        todo: todo,\r\n        done: false,\r\n        id: todoId++,\r\n    }\r\n})\r\n\r\nexport const delTodo = (id:number) => ({\r\n    type: DelTodo,\r\n    id: id,\r\n})\r\n\r\nexport const toggleTodo = (id:number) => ({\r\n    type: ToggleTodo,\r\n    id: id,\r\n})\r\n\r\n\r\nconst initialState:TodoItemType[] = [{\r\n    todo: 'todo example',\r\n    done: false,\r\n    id: 0,\r\n}]\r\n\r\ntype actionType = ReturnType<typeof addTodo> | ReturnType<typeof delTodo> | ReturnType<typeof toggleTodo>;\r\n\r\n// const reducer = createReducer(initialState, {\r\n//     [AddTodo]: (state:TodoItemType[], action:addTodoType) => state.push(action.todo),\r\n//     [DelTodo]: (state:TodoItemType[], action:delTodoType) => state.filter(item => item.id !== action.id),\r\n//     [ToggleTodo]: (state:TodoItemType[], action:toggleTodoType) => state.map(item => item.id === action.id ? {...item, done: !item.done} : item),\r\n// })\r\n\r\nconst reducer = (state = initialState, action:actionType) => {\r\n    // return produce((state, draft:any) => {\r\n    //     switch(action.type){\r\n    //         case AddTodo:{\r\n    //             return state.push(action.todo);\r\n    //         }\r\n    //         case DelTodo:{\r\n    //             return state.filter((item:TodoItemType) => item.id !== action.id);\r\n    //         }\r\n    //         case ToggleTodo:{\r\n    //             return state.map((item:TodoItemType) => item.id === action.id ? {...item, done: !item.done}: item)\r\n    //         }\r\n    //         default:\r\n    //             return state;\r\n    //     }\r\n    // })\r\n    switch(action.type){\r\n        case AddTodo:{\r\n            return state.concat(action.todo);\r\n        }\r\n        case DelTodo:{\r\n            return state.filter((item:TodoItemType) => item.id !== action.id);\r\n        }\r\n        case ToggleTodo:{\r\n            return state.map((item:TodoItemType) => item.id === action.id ? {...item, done: !item.done}: item)\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":9,"column":11,"nodeType":"59","messageId":"60","endLine":9,"endColumn":13},{"ruleId":"57","severity":1,"message":"61","line":32,"column":14,"nodeType":"59","messageId":"60","endLine":32,"endColumn":30},{"ruleId":"57","severity":1,"message":"62","line":2,"column":9,"nodeType":"59","messageId":"60","endLine":2,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":12,"column":13,"nodeType":"65","messageId":"66","endLine":12,"endColumn":53,"fix":"67"},{"ruleId":"57","severity":1,"message":"68","line":3,"column":9,"nodeType":"59","messageId":"60","endLine":3,"endColumn":16},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'handleDeleteTodo' is defined but never used.","'useState' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property color.","MemberExpression","unexpectedWhitespace",{"range":"71","text":"72"},"'produce' is defined but never used.","no-global-assign","no-unsafe-negation",[523,525],"."]